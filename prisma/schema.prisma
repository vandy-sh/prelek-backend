// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  user_id               String  @id
  name                  String
  email                 String?
  password              String
  house_number          Int
  roles                 String
  phone_number          String?
  address               String?
  last_login_ip         String?
  last_login_user_agent String?
  last_login_timestamp  String?
  wallet                 Wallet?
  transactions           Transaction[]

  @@index([user_id])
  @@index([email])
  @@index([name])
  @@index([house_number])
  @@index([phone_number])
  @@index([roles])
  @@map("users")
}

model Wallet {
  id      String @id
  userid  String @unique()
  balance Int
  type    String // WARGA/ADMIN
  user    User   @relation(fields: [userid], references: [user_id])
  transactions Transaction[]

  @@index([id])
  @@map("wallet")
}

model Transaction {
  id                 String               @id
  transaction_type   String                // TOP_UP, EXPANSES, SUBSCRIPTION_EXPANSES , INCOME
  total_amount       Int
  wallet_id          String?
  activity_id        String?
  user_id            String 
  status             String               @default("PENDING")
  created_at         DateTime             @default(now())
  update_at          DateTime             @updatedAt
  user               User                 @relation(fields: [user_id], references: [user_id])
  wallet             Wallet? @relation(fields: [wallet_id], references: [id])
  Activity           Activity? @relation(fields: [activity_id], references: [id])
  Transaction_detail Transaction_detail[]

  @@index([id])
  @@index([transaction_type])
  @@index([update_at])
  @@map("transactions")
}

model Activity {
    id String @id
    title String
    description String
    start_date DateTime
    photos Media[]

    @@map("activities")
    Transaction Transaction[]
}


model Media {
    id String @id
    size Int
    mime_type String
    url String
    media_type String // foto bon / foto kegiatan
    activity_id String?
    Activity Activity? @relation(fields: [activity_id], references: [id])

    @@map("media")
}


model Transaction_detail {
  id             String      @id
  transaction_id String
  title          String
  description    String
  price          Int
  quantity       Int
  transactionid  Transaction @relation(fields: [transaction_id], references: [id])

  @@index([transaction_id])
  @@map("transaction_details")
}
